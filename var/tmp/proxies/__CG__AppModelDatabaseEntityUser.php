<?php

namespace Nettrine\Proxy\__CG__\App\Model\Database\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \App\Model\Database\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'login', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'firstname', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'lastname', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'role', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'lastLoggedAt', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'managedProjects', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'id'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'login', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'firstname', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'lastname', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'role', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'lastLoggedAt', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'managedProjects', '' . "\0" . 'App\\Model\\Database\\Entity\\User' . "\0" . 'id'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function changeLoggedAt(): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'changeLoggedAt', []);

        parent::changeLoggedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function getLogin(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogin', []);

        return parent::getLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function changeLogin(string $login): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'changeLogin', [$login]);

        parent::changeLogin($login);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLoggedAt(): ?\App\Model\Utils\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLoggedAt', []);

        return parent::getLastLoggedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getRole(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRole', []);

        return parent::getRole();
    }

    /**
     * {@inheritDoc}
     */
    public function setRole(string $role): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRole', [$role]);

        parent::setRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswordHash(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswordHash', []);

        return parent::getPasswordHash();
    }

    /**
     * {@inheritDoc}
     */
    public function changePasswordHash(string $password): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'changePasswordHash', [$password]);

        parent::changePasswordHash($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstname(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstname', []);

        return parent::getFirstname();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastname(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastname', []);

        return parent::getLastname();
    }

    /**
     * {@inheritDoc}
     */
    public function getFullname(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullname', []);

        return parent::getFullname();
    }

    /**
     * {@inheritDoc}
     */
    public function rename(string $firstname, string $lastname): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'rename', [$firstname, $lastname]);

        parent::rename($firstname, $lastname);
    }

    /**
     * {@inheritDoc}
     */
    public function setState(int $state): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', [$state]);

        parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function getGravatar(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGravatar', []);

        return parent::getGravatar();
    }

    /**
     * {@inheritDoc}
     */
    public function toIdentity(): \App\Model\Security\Identity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toIdentity', []);

        return parent::toIdentity();
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

}
